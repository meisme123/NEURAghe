import sys, math, ctypes, struct, json
from random import randint



#settings={}
#with open("settings.txt", "r") as f:
#  settings_raw = f.readlines()
#  line =0
#  for s in settings_raw:  
#    line += 1
#    if len(s.strip()):
#      if s.strip()[0]!='#':
#        if '#' in s.strip():
#          s= s.strip()[0:s.find('#')].strip()
#        if '=' in s.strip():
#          if s.split("=")[1].strip().isdigit():
#            settings[s.split("=")[0].strip()] = int(s.split("=")[1].strip())
#          else:
#            settings[s.split("=")[0].strip()] = s.split("=")[1].strip()
#        else:
#          print tcolors.ERROR + "[ERROR] assignment required!" + tcolors.ENDC
#          print "\tin %s at line %d." %( file_name, line)
#          sys.exit(1)
#
#FS = settings['FS']
#IF = settings['IF']
#OF = settings['OF']
#datatype = settings['data_type_i']

IF=64
OF=64
FS=3

filename_wei = './weights/weights_array_file'
filename_bi = './weights/bias_array_file'

datasize = 8



if datasize == 8:
  datatype = 'b'
if datasize == 16:
  datatype = 'h'
if datasize == 32:
  datatype = 'i'


bias = [0]*OF
for i in range (0, OF):
	bias[i] = 0x1;
valore_peso = 87

'''
weights =[0]*IF*OF*FS*FS
for i in range (0, OF):
  for j in range (0, IF):
     for k in range (0,FS*FS):
	weights[k + j*FS*FS + i*IF*FS*FS] = 1#k #+ j*FS*FS + i*IF*FS*FS
'''

	
    #if(j==0):
      #weights[0 + j*FS*FS + i*IF*FS*FS] = valore_peso + i
      #weights[3 + j*FS*FS + i*IF*FS*FS] = valore_peso + i
      #weights[4 + j*FS*FS + i*IF*FS*FS] = valore_peso + i
      #weights[8 + j*FS*FS + i*IF*FS*FS] = valore_peso #+ i
      #weights[9 + j*FS*FS + i*IF*FS*FS] = valore_peso #+ i
      #weights[10 + j*FS*FS + i*IF*FS*FS] = valore_peso + i
      #weights[11 + j*FS*FS + i*IF*FS*FS] = valore_peso #+ i
      #weights[12 + j*FS*FS + i*IF*FS*FS] = valore_peso #+ i
      #weights[13 + j*FS*FS + i*IF*FS*FS] = valore_peso #+ i
      #weights[20 + j*FS*FS + i*IF*FS*FS] = valore_peso + i

#weights =[randint(-2**(datasize-1), 2**(datasize-1)-1) for i in range (0, IF*OF*FS*FS)]

#weights =[randint(-10, 10) for i in range (0, IF*OF*FS*FS)]
weights =[randint(-0x80, 0x7f) for i in range (0, IF*OF*FS*FS)]

#for i in range (0, OF):
#  for j in range (0, IF):
#     for k in range (0,FS*FS):
#	if(j>=IF/2 and i>=OF-4):
#		weights[k + j*FS*FS + i*IF*FS*FS] = randint(-10, 10)
#	else:
#		weights[k + j*FS*FS + i*IF*FS*FS] = 0
'''
weights =[0]*IF*OF*FS*FS

for i in range (0, OF):
  for j in range (0, IF):
     for k in range (0,FS*FS):
     	if(k==0):
		weights[k + j*FS*FS + i*IF*FS*FS] = 0x200
	else:
		weights[k + j*FS*FS + i*IF*FS*FS] = 0
	'''

#weights =[-128 for i in range (0, IF*OF*FS*FS)]

	
	

#print weights
with open(filename_wei, "wb") as f:
  for wb in weights:
    data=struct.pack(datatype, wb)
    f.write(data)

#print bias
with open(filename_bi, "wb") as f:
  for bi in bias:
    data=struct.pack(datatype, bi)
    f.write(data)
