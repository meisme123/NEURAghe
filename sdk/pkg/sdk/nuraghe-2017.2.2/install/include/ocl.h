/*
 * Copyright (c) 2014 Germain Haugou
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

#ifndef __COMMON_OCL_H__
#define __COMMON_OCL_H__

#include <hd/hd_api.h>

/*
 * FC requests IDs
 */

#define FABRIC_RT_OCL_HTOFC_GET_PROGRAM_DESC_SIZE (PULP_FREQ_PMID(PULP_REQ_OCL_PMID) | PULP_FREQ_REQID(0) | PULP_FREQ_ISTASK)
#define FABRIC_RT_OCL_HTOFC_GET_PROGRAM_DESC (PULP_FREQ_PMID(PULP_REQ_OCL_PMID) | PULP_FREQ_REQID(1) | PULP_FREQ_ISTASK)
#define FABRIC_RT_OCL_HTOFC_ALLOC_L2_BUFFER (PULP_FREQ_PMID(PULP_REQ_OCL_PMID) | PULP_FREQ_REQID(2) | PULP_FREQ_ISTASK)
#define FABRIC_RT_OCL_HTOFC_FREE_L2_BUFFER (PULP_FREQ_PMID(PULP_REQ_OCL_PMID) | PULP_FREQ_REQID(3) | PULP_FREQ_ISTASK)
#define FABRIC_RT_OCL_HTOFC_ENQUEUE_GRAPH (PULP_FREQ_PMID(PULP_REQ_OCL_PMID) | PULP_FREQ_REQID(4) | PULP_FREQ_ISTASK)
#define FABRIC_RT_OCL_HTOFC_LOAD_GRAPH (PULP_FREQ_PMID(PULP_REQ_OCL_PMID) | PULP_FREQ_REQID(5) | PULP_FREQ_ISTASK)

#define FABRIC_RT_OCL_HTOFC_DEINIT (PULP_FREQ_PMID(PULP_REQ_OCL_PMID) | PULP_FREQ_REQID(6) | PULP_FREQ_ISTASK)
#define FABRIC_RT_OCL_HTOFC_INIT (PULP_FREQ_PMID(PULP_REQ_OCL_PMID) | PULP_FREQ_REQID(7) | PULP_FREQ_ISTASK)
  
#define FABRIC_RT_OCL_CCTOFC_DEQUEUEWG (PULP_FREQ_PMID(PULP_REQ_OCL_PMID) | PULP_FREQ_REQID(9) | PULP_FREQ_ISTASK)
#define FABRIC_RT_OCL_CCTOFC_DEINITDONE (PULP_FREQ_PMID(PULP_REQ_OCL_PMID) | PULP_FREQ_REQID(10) | PULP_FREQ_ISTASK)
#define FABRIC_RT_OCL_CCTOFC_INITDONE (PULP_FREQ_PMID(PULP_REQ_OCL_PMID) | PULP_FREQ_REQID(11) | PULP_FREQ_ISTASK)
#define FABRIC_RT_OCL_CCTOFC_ENDGRAPH (PULP_FREQ_PMID(PULP_REQ_OCL_PMID) | PULP_FREQ_REQID(12) | PULP_FREQ_ISTASK)

#define FABRIC_RT_OCL_HTOFC_ENQUEUE_COMMAND (PULP_FREQ_PMID(PULP_REQ_OCL_PMID) | PULP_FREQ_REQID(14) | PULP_FREQ_ISTASK)

/*
 * CC requests IDs
 */

#define FABRIC_RT_OCL_FCTOCC_EXECWORKGROUP (PULP_FREQ_PMID(PULP_REQ_OCL_PMID) | PULP_FREQ_REQID(0) | PULP_FREQ_ISTASK)
#define FABRIC_RT_OCL_FCTOCC_DEINIT (PULP_FREQ_PMID(PULP_REQ_OCL_PMID) | PULP_FREQ_REQID(1) | PULP_FREQ_ISTASK | PULP_FREQ_ISTASK)
#define FABRIC_RT_OCL_FCTOCC_INIT (PULP_FREQ_PMID(PULP_REQ_OCL_PMID) | PULP_FREQ_REQID(2) | PULP_FREQ_ISTASK | PULP_FREQ_ISTASK)
#define FABRIC_RT_OCL_FCTOCC_ENQUEUE_GRAPH (PULP_FREQ_PMID(PULP_REQ_OCL_PMID) | PULP_FREQ_REQID(3) | PULP_FREQ_ISTASK)
#define FABRIC_RT_OCL_FCTOCC_SG_COPY_NOTIF_LOCAL (PULP_FREQ_PMID(PULP_REQ_OCL_PMID) | PULP_FREQ_REQID(5) | PULP_FREQ_ISTASK)
#define FABRIC_RT_OCL_FCTOCC_SG_COPY_NOTIF_REMOTE (PULP_FREQ_PMID(PULP_REQ_OCL_PMID) | PULP_FREQ_REQID(6) | PULP_FREQ_ISTASK)

typedef struct {
  int32_t initClusterMask;
  int32_t nbPe;
  uint32_t debugStacks;
  int32_t debugStackSize;
  int32_t tempTaskPeriod;
  int32_t daemonPid;
  uint32_t fcReq;
} sthorm_ocl_conf_t;

void handleFabricData(uint32_t data);

#endif
