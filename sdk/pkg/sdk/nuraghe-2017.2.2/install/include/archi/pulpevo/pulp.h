#ifndef PULPEVO_PULP_H
#define PULPEVO_PULP_H

#if PULP_CHIP != CHIP_PULPEVO
#error This file must be included only for pulpevo chip
#endif

#define PULP_BASE_ADDR                0x10000000
#define PULP_BASE_REMOTE_ADDR         0x10000000
#define PULP_HAS_ALIAS                1
#define PULP_HAS_L1_ALIAS             1
#define PULP_CLUSTER_SIZE             0x00400000
#define PULP_CLUSTER_BASE_ADDR(cid)   (PULP_BASE_REMOTE_ADDR + (cid)*PULP_CLUSTER_SIZE)

/* TCDM */
#define TCDM_BASE_ADDR                ( PULP_BASE_ADDR )
#define TCDM_SRAM_BASE_ADDR           ( TCDM_BASE_ADDR + 0x0 )
#define TCDM_SCM_BASE_ADDR            ( TCDM_BASE_ADDR + 0x10000 )
#define TEST_AND_SET_OFFSET           0x00100000
#define TEST_AND_SET_BASE_ADDR        ( PULP_BASE_ADDR + TEST_AND_SET_OFFSET )
#define LIBGOMP_BASE_ADDR             ( TCDM_BASE_ADDR + 0x0 )
/* IMPORTANT!!! all the TCDM #define MUST be aligned with the related sections in the linker script */

/* CLUSTER PERIPHERALS OFFSETS */
#define CLUSTER_PERIPHERALS_OFFSET    ( 0x200000 )
#define BBMUX_CLKGATE_OFFSET          ( CLUSTER_PERIPHERALS_OFFSET + 0x0800 )

/* CLUSTER PERIPHERALS */
#define CLUSTER_PERIPHERALS_BASE_ADDR ( PULP_BASE_ADDR + CLUSTER_PERIPHERALS_OFFSET )
#define EOC_UNIT_BASE_ADDR            ( CLUSTER_PERIPHERALS_BASE_ADDR + 0x0000 )
#define FETCH_EN_UNIT_BASE_ADDR       ( CLUSTER_PERIPHERALS_BASE_ADDR + 0x0008 )
#define DVS_DVSE_UNIT_BASE_ADDR       ( CLUSTER_PERIPHERALS_BASE_ADDR + 0x0018 )

#define TIMER_BASE_ADDR               ( CLUSTER_PERIPHERALS_BASE_ADDR + 0x0400 )
#define BBMUX_CLKGATE_BASE_ADDR       ( PULP_BASE_ADDR + BBMUX_CLKGATE_OFFSET )
#define REC_PIPE_STARGE_BASE_ADDR     ( CLUSTER_PERIPHERALS_BASE_ADDR + 0x0C00 )
#define MMU_BASE_ADDR                 ( CLUSTER_PERIPHERALS_BASE_ADDR + 0x1000 )
#define ICACHE_CTRL_BASE_ADDR         ( CLUSTER_PERIPHERALS_BASE_ADDR + 0x1400 )
#define HWCE_BASE_ADDR                ( CLUSTER_PERIPHERALS_BASE_ADDR + 0x1800 )

#define CLKGATE_REG_BASE              ( BBMUX_CLKGATE_BASE_ADDR + 0x100)

/* DEMUX MAPPED PERIPHERALS  */
#define DEMUX_PERIPHERALS_BASE_ADDR   ( PULP_CLUSTER_BASE + 0x004000 )
#define EVENT_UNIT_DEMUX_BASE_ADDR    ( DEMUX_PERIPHERALS_BASE_ADDR + 0x00000 )
#define MCHAN_BASE_ADDR               (PULP_CLUSTER_BASE + PULP_DMA_OFFSET)
//#define PERF_BASE_ADDR                ( DEMUX_PERIPHERALS_BASE_ADDR + 0x00800 )

// use these defines if you want to place the DMEUX_PERIPH just before the test and set region
//#define DEMUX_PERIPHERALS_BASE_ADDR   ( TEST_AND_SET_BASE_ADDR )
//#define EVENT_UNIT_DEMUX_BASE_ADDR    ( DEMUX_PERIPHERALS_BASE_ADDR - 0x00400 )
//#define MCHAN_BASE_ADDR               ( DEMUX_PERIPHERALS_BASE_ADDR - 0x00800 )
//#define PERF_BASE_ADDR                ( DEMUX_PERIPHERALS_BASE_ADDR - 0x00C00 )



/* SOC PERIPHERALS */
#define SOC_PERIPHERALS_BASE_ADDR     ( PULP_BASE_ADDR + 0xA100000 )

#define CVP_BASE_ADDR                 ( SOC_PERIPHERALS_BASE_ADDR + 0x0000 )
#define GPIO_BASE_ADDR                ( SOC_PERIPHERALS_BASE_ADDR + 0x1000 )
#define UDMA_BASE_ADDR                ( SOC_PERIPHERALS_BASE_ADDR + 0x2000 )
#define APB_SOC_CTRL_ADDR             ( SOC_PERIPHERALS_BASE_ADDR + 0x3000 )
#define SOC_EVENT_UNIT_ADDR           ( SOC_PERIPHERALS_BASE_ADDR + 0x4000 )

/* STDOUT */
#define STDOUT_BASE_ADDR              ( SOC_PERIPHERALS_BASE_ADDR + 0x10000 )
#define FPUTCHAR_BASE_ADDR            ( STDOUT_BASE_ADDR + 0x1000 )
#define FILE_CMD_BASE_ADDR            ( STDOUT_BASE_ADDR + 0x2000 )
#define STREAM_BASE_ADDR              ( STDOUT_BASE_ADDR + 0x3000 )

/* HW traces */
#define TRACE_BASE_ADDR               ( SOC_PERIPHERALS_BASE_ADDR + 0x20000 )

/* L2 MEMORY */
#define L2_MEM_BASE_ADDR              ( PULP_BASE_ADDR + 0xC000000 )
/* ROM */
#define ROM_BASE_ADDR                 ( PULP_BASE_ADDR + 0xA000000 )


#define PULP_EVENT_SPIM0 10
#define PULP_EVENT_SPIM1 11

#define PULP_DMA_EVT   16



#define PULP_L3_BASE 0x80000000
#define PULP_L3_SIZE 0x10000000

#define PULP_L2_BASE 0x1c000000
#define PULP_L2_SIZE 0x04000000

#define PULP_CLUSTER_BASE (0xFFFF8000)
#define PULP_CLUSTER_REMOTE_BASE(cid) (0x10000000 + 0x400000*(cid))

#define PULP_L1_REMOTE_BASE(cid) PULP_CLUSTER_REMOTE_BASE(cid)
#define PULP_L1_BASE (0x00000000)
#define PULP_L1_SIZE 0x00100000
#define PULP_L1_TAS_OFFSET 0x00100000



#define PULP_ICACHE_OFFSET 0x00001400

#define PULP_EOC_OFFSET 0x00000000
#define PULP_EOC_REMOTE_OFFSET 0x00200000
#define PULP_EOC_SIZE   0x00000400

#define PULP_TIMER_OFFSET 0x000400

#define PULP_DEMUX_OFFSET  0x004000

#define PULP_DMA_OFFSET    0x004400
#define PULP_DMAEXT_OFFSET 0x004800

#define PULP_CKGATE_OFFSET 0x00000800
#define PULP_CKGATE_REMOTE_OFFSET 0x00200800
#define PULP_COREID_AREA_OFFSET 0x00300000

#define PULP_UART_OFFSET             0x1A103000

#define PULP_STDOUT_OFFSET           0x1A110000




#define PULP_COREID_OFFSET 0
#define PULP_CLUSTERID_OFFSET 4

#define PULP_TIMER_START_OFFSET           0x0
#define PULP_TIMER_STOP_OFFSET            0x4
#define PULP_TIMER_RESET_OFFSET           0x8
#define PULP_TIMER_GET_OFFSET             0xc   
#define PULP_TIMER_GETHI_OFFSET           0x10   

#define PULP_DMA_EVTMASK                  (1<<PULP_DMA_EVT)

//#if PULP_CHIP_VERSION == 100
//#define PULP_NB_GP_EVENTS                 16
//#define PULP_HW_BAR_EVENT                 0
//#endif

#define EU_NB_SOC_BARRIER(nbClusters) ((nbClusters)/2)

#endif
